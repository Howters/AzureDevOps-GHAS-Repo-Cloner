{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "f134df89-e65f-47f4-a118-94d9128fd2e4",
  "name": "PipelineTest",
  "friendlyName": "Pipeline Testing",
  "description": "Copy your code and make it a new repo + the pipeline",
  "helpMarkDown": "",
  "category": "Utility",
  "author": "Hans",
  "version": {
    "Major": 0,
    "Minor": 3,
    "Patch": 48
  },
  "instanceNameFormat": "Copy Code",
  "inputs": [
    {
      "name": "projectfolder",
      "type": "string",
      "label": "Repository Name-48",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Name of the Repository that will be checked. This will replace the existing repo if it exists, and create a new one if it does not. Best practice : Uses the same name as the Repository, for example: Repository name is SSG10.Binus.API, write the Repository name here.",
      "validation": {
        "expression": "isMatch(value, '^[a-zA-Z0-9-.]+$', 'IgnoreCase,Multiline')",
        "message": "Please enter a value containing only letters (a-z, A-Z), numbers (1-9), the period or dot sign (.), and the minus sign (-). Special characters such as brackets ()[] and spaces are not allowed."
    } 
    },
    {
      "name": "projectType",
      "type": "pickList",
      "label": "Project Type",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Type of the project being checked. Press Back-end for any Backend services that use Binus.WS.Pattern (or .NET), press Front-end for any services in JavaScript. Azure Function not supported for now.",
      "options": {
        "frontend": "Front-End",
        "backend": "Back-End",
        "legacybackend": "Legacy Back-End",
        "azure nexus": "Azure Nexus",
        "azure no nexus": "Azure No Nexus"
      }
    },
    {
      "name": "languages",
      "type": "pickList",
      "label": "Select the programming language",
      "defaultValue": "javascript",
      "helpMarkDown": "The programming language used in this project",
      "required": true,
      "visibleRule": "projectType = legacybackend || projectType = frontend",
      "options": {
        "cpp": "cpp",
        "csharp": "csharp",
        "javascript": "javascript",
        "go": "go",
        "java": "java",
        "python": "python",
        "ruby": "ruby",
        "swift": "swift"
    }
    },

    {
      "name": "recipientEmail",
      "type": "string",
      "label": "Recipient's Email (Seperated with ';' without space)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The recipient(s)'s email that will receive the result of the scanning. Use ';' as the seperator between emails without any spaces (example: a@binus.edu;b@binus.edu).",
      "validation": {
          "expression": "isMatch(value, '^([\\w.-]+@[\\w.-]+(?:;[\\w.-]+@[\\w.-]+)*)?$', 'IgnoreCase,Multiline')",
          "message": "Invalid email format. Please enter valid email addresses separated by ';' without spaces."
      }

    },
    {
      "name": "projectRequester",
      "type": "string",
      "label": "Your Email",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Please input your email here (must be @edu)",
      "validation": {
        "expression": "isMatch(value, '^.*@binus\\.edu$', 'IgnoreCase')",
        "message": "The email must end with @binus.edu"
    }
    },
    {
      "name": "projectOwner",
      "type": "pickList",
      "label": "Project Owner",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The division of the Repository/Project's owner, this division is responsible for the project running.",
      "options": {
        "SSG 1 Cluster 1": "SSG 1 Cluster 1",
        "SSG 1 Cluster 2": "SSG 1 Cluster 2",
        "SSG 1 Cluster 3": "SSG 1 Cluster 3",
        "SSG 1 Cluster 4": "SSG 1 Cluster 4",
        "SSG 1 Cluster 5": "SSG 1 Cluster 5",
        "SSG 2 Cluster 1": "SSG 2 Cluster 1",
        "SSG 2 Cluster 2": "SSG 2 Cluster 2",
        "SSG 2 Cluster 3": "SSG 2 Cluster 3",
        "SSG 2 Cluster 4": "SSG 2 Cluster 4",
        "SSG 2 Cluster 5": "SSG 2 Cluster 5",
        "SSG 3 Cluster 1": "SSG 3 Cluster 1",
        "SSG 3 Cluster 2": "SSG 3 Cluster 2",
        "SSG 3 Cluster 3": "SSG 3 Cluster 3",
        "SSG 3 Cluster 4": "SSG 3 Cluster 4",
        "SSG 3 Cluster 5": "SSG 3 Cluster 5",
        "SSG 4 Cluster 1": "SSG 4 Cluster 1",
        "SSG 4 Cluster 2": "SSG 4 Cluster 2",
        "SSG 4 Cluster 3": "SSG 4 Cluster 3",
        "SSG 4 Cluster 4": "SSG 4 Cluster 4",
        "SSG 4 Cluster 5": "SSG 4 Cluster 5",
        "SSG 5 Cluster 1": "SSG 5 Cluster 1",
        "SSG 5 Cluster 2": "SSG 5 Cluster 2",
        "SSG 5 Cluster 3": "SSG 5 Cluster 3",
        "SSG 5 Cluster 4": "SSG 5 Cluster 4",
        "SSG 5 Cluster 5": "SSG 5 Cluster 5",
        "SSG 6 Cluster 1": "SSG 6 Cluster 1",
        "SSG 6 Cluster 2": "SSG 6 Cluster 2",
        "SSG 6 Cluster 3": "SSG 6 Cluster 3",
        "SSG 6 Cluster 4": "SSG 6 Cluster 4",
        "SSG 6 Cluster 5": "SSG 6 Cluster 5",
        "SSG 7 Cluster 1": "SSG 7 Cluster 1",
        "SSG 7 Cluster 2": "SSG 7 Cluster 2",
        "SSG 7 Cluster 3": "SSG 7 Cluster 3",
        "SSG 7 Cluster 4": "SSG 7 Cluster 4",
        "SSG 7 Cluster 5": "SSG 7 Cluster 5",
        "SSG 8 Cluster 1": "SSG 8 Cluster 1",
        "SSG 8 Cluster 2": "SSG 8 Cluster 2",
        "SSG 8 Cluster 3": "SSG 8 Cluster 3",
        "SSG 8 Cluster 4": "SSG 8 Cluster 4",
        "SSG 8 Cluster 5": "SSG 8 Cluster 5",
        "SSG 9 Cluster 1": "SSG 9 Cluster 1",
        "SSG 9 Cluster 2": "SSG 9 Cluster 2",
        "SSG 9 Cluster 3": "SSG 9 Cluster 3",
        "SSG 9 Cluster 4": "SSG 9 Cluster 4",
        "SSG 9 Cluster 5": "SSG 9 Cluster 5",
        "SSG 10 Cluster 1": "SSG 10 Cluster 1",
        "SSG 10 Cluster 2": "SSG 10 Cluster 2",
        "SSG 10 Cluster 3": "SSG 10 Cluster 3",
        "SSG 10 Cluster 4": "SSG 10 Cluster 4",
        "SSG 10 Cluster 5": "SSG 10 Cluster 5"
      }
    },
    {
      "name": "isProd",
      "type": "boolean",
      "label": "Final Check for deployment to Production",
      "defaultValue": false,
      "required": true,
      "helpMarkDown": "Untick this box if you are a staff / just scanning code for vulnerabilities. Tick this box if you are trying to scan this project for final security Testing and going to deploy this code to Production. Any vulnerabilities found will alert the Cyber Security Team."
    },
    {
      "name": "isProdConfirmation",
      "type": "pickList",
      "label": "Warning : This will notify Cyber Security Team. Deploy this code for Production?",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "If you are unsure, untick the box. After confirmation, your code will be reviewed and automatically send notification to Cyber Security Team if any vulnerabilites are found; these are required to be fixed according to Cyber Security requirements.",
      "options": {
        "true": "Yes"
      },
      "visibleRule": "isProd = true",
      "validation": {
        "expression": "isMatch(value, '^$|true$', 'IgnoreCase,Multiline')",
        "message": "Value must be Yes to deploy the code for production."
      }
    }
  ],
  "execution": {
    "Node10": {
      "target": "index.js"
    }
  }
}
